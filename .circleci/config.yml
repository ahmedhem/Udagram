# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.1.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - node/install:
          install-yarn: true
          node-version: '16.13'

      - checkout
      - run:
          name: Front-End Install
          command: |
            cd udagram && npm run frontend:install
      - run:
          name: Back-End Install
          command: |
            cd udagram && npm run backend:install
      - run:
          name: Front-End Build
          command: |
            cd udagram &&  npm run frontend:build
      - run:
          name: Back-End Build
          command: |
            cd udagram && npm run backend:build
      - run:
          name: install aws
          command: |
            sudo apt-get install software-properties-common  && sudo apt-add-repository universe  && sudo apt update && sudo apt upgrade -y && sudo apt-get install python3-pip && pip install awscli
      - run:
          name: Configure AWS Access Key ID
          command: |
            aws configure set aws_access_key_id $aws_access_key_id
      - run:
          name: Configure AWS Secret Access Key
          command: |
            aws configure set aws_secret_access_key  $aws_secret_access_key
      - run:
          name: Configure AWS default region
          command: |
            aws configure set default.region  $region
      - run:
          name: Configure AWS token session
          command: |
            aws configure set aws_session_token  $aws_session_token
      - run:
          name: Configure AWS sercurity session
          command: |
            aws configure set aws_security_token $aws_security_token
      - run:
          name: Deploy App
          command: |
            cd udagram && npm run frontend:deploy
      - run:
           name: "Say hello"
           command: "echo Hello, World!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
